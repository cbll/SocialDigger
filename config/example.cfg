#######################################
########APP Settings ##########
#######################################

# enable debug mode.  Disable this in production!
DEBUG = True
HOST_IP = '0.0.0.0'

TITLE = 'app'
SUBTITLE = 'A Flask Template with Bootstrap 3.1'
AUTHOR = 'John Q. Public'
AUTHOR_EMAIL = 'john.q.public@gmail.com'
KEYWORDS = 'python, Flask, template, Bootstrap, authorization'
DESCRIPTION = 'A Flask project skeleton, as opposed to a plug-in, for easy bootstraping of Flask projects involving SQLAlchemy and Bootstrap'

# Need secret key for Flask session encryption.
# Simple and secure way to generate a random secret key on command line:
#    python -c "print repr(__import__('os').urandom(40))"
# With Flask, you have the option of  setting the resulting secret key 
# in your environment, like so
# Ubuntu/Debian with Bash:
# export SECRET_KEY = 'supersecretkeyfasjfdksa'
# Many other distros:
# set SECRET_KEY = 'supersecretkeyfasjfdksa'
# You just will need to change the config loading in app/__init__.py to 
# accomodate loading these from environmental vars using Flask's app.config.from_envvar('VARHERE')

# Same can be applied to the SQLALCHEMY Database, since it contains your db password
# export SQLALCHEMY_DATABASE_URI = 'postgresql://testuser:testpassword@127.0.0.1/testdb'
SQLALCHEMY_DATABASE_URI = 'postgresql://testuser:testpassword@127.0.0.1/testdb'
